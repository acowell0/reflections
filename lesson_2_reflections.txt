lesson2_reflections
blah


How is the staging area different from the working directory and the repository? What value do you think it offers?
 - staging area is temp space where files are stored before commit;

How can you use the staging area to make sure you have one commit per logical change?
 - by using diff to compare staging area with the working dir; use git add to only add what you want to staging area

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
 - when you are working on temp/experimental changes or when multiple developers are working on the same files
 - branches give you separate working spaces to make changes outside of the master branch

How do the diagrams help you visualize the branch structure?
 - you can see exactly what commits are in each branch
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
 - one branch with all of the changes merged. b/c the separate branches have become one
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
 - pros: you don't have to spend time/effort merging changes manually that are obvious
 - cons: none
